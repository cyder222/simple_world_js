# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.16

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/cyder/src/libs/simple_world_js

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/cyder/src/libs/simple_world_js

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/cyder/src/libs/simple_world_js/CMakeFiles /home/cyder/src/libs/simple_world_js/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/cyder/src/libs/simple_world_js/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named WorldJS

# Build rule for target.
WorldJS: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 WorldJS
.PHONY : WorldJS

# fast build rule for target.
WorldJS/fast:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/build
.PHONY : WorldJS/fast

#=============================================================================
# Target rules for targets named World

# Build rule for target.
World: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 World
.PHONY : World

# fast build rule for target.
World/fast:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/build
.PHONY : World/fast

#=============================================================================
# Target rules for targets named Hello

# Build rule for target.
Hello: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 Hello
.PHONY : Hello

# fast build rule for target.
Hello/fast:
	$(MAKE) -f CMakeFiles/Hello.dir/build.make CMakeFiles/Hello.dir/build
.PHONY : Hello/fast

lib/World/src/cheaptrick.o: lib/World/src/cheaptrick.cpp.o

.PHONY : lib/World/src/cheaptrick.o

# target to build an object file
lib/World/src/cheaptrick.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/cheaptrick.cpp.o
.PHONY : lib/World/src/cheaptrick.cpp.o

lib/World/src/cheaptrick.i: lib/World/src/cheaptrick.cpp.i

.PHONY : lib/World/src/cheaptrick.i

# target to preprocess a source file
lib/World/src/cheaptrick.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/cheaptrick.cpp.i
.PHONY : lib/World/src/cheaptrick.cpp.i

lib/World/src/cheaptrick.s: lib/World/src/cheaptrick.cpp.s

.PHONY : lib/World/src/cheaptrick.s

# target to generate assembly for a file
lib/World/src/cheaptrick.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/cheaptrick.cpp.s
.PHONY : lib/World/src/cheaptrick.cpp.s

lib/World/src/codec.o: lib/World/src/codec.cpp.o

.PHONY : lib/World/src/codec.o

# target to build an object file
lib/World/src/codec.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/codec.cpp.o
.PHONY : lib/World/src/codec.cpp.o

lib/World/src/codec.i: lib/World/src/codec.cpp.i

.PHONY : lib/World/src/codec.i

# target to preprocess a source file
lib/World/src/codec.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/codec.cpp.i
.PHONY : lib/World/src/codec.cpp.i

lib/World/src/codec.s: lib/World/src/codec.cpp.s

.PHONY : lib/World/src/codec.s

# target to generate assembly for a file
lib/World/src/codec.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/codec.cpp.s
.PHONY : lib/World/src/codec.cpp.s

lib/World/src/common.o: lib/World/src/common.cpp.o

.PHONY : lib/World/src/common.o

# target to build an object file
lib/World/src/common.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/common.cpp.o
.PHONY : lib/World/src/common.cpp.o

lib/World/src/common.i: lib/World/src/common.cpp.i

.PHONY : lib/World/src/common.i

# target to preprocess a source file
lib/World/src/common.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/common.cpp.i
.PHONY : lib/World/src/common.cpp.i

lib/World/src/common.s: lib/World/src/common.cpp.s

.PHONY : lib/World/src/common.s

# target to generate assembly for a file
lib/World/src/common.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/common.cpp.s
.PHONY : lib/World/src/common.cpp.s

lib/World/src/d4c.o: lib/World/src/d4c.cpp.o

.PHONY : lib/World/src/d4c.o

# target to build an object file
lib/World/src/d4c.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/d4c.cpp.o
.PHONY : lib/World/src/d4c.cpp.o

lib/World/src/d4c.i: lib/World/src/d4c.cpp.i

.PHONY : lib/World/src/d4c.i

# target to preprocess a source file
lib/World/src/d4c.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/d4c.cpp.i
.PHONY : lib/World/src/d4c.cpp.i

lib/World/src/d4c.s: lib/World/src/d4c.cpp.s

.PHONY : lib/World/src/d4c.s

# target to generate assembly for a file
lib/World/src/d4c.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/d4c.cpp.s
.PHONY : lib/World/src/d4c.cpp.s

lib/World/src/dio.o: lib/World/src/dio.cpp.o

.PHONY : lib/World/src/dio.o

# target to build an object file
lib/World/src/dio.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/dio.cpp.o
.PHONY : lib/World/src/dio.cpp.o

lib/World/src/dio.i: lib/World/src/dio.cpp.i

.PHONY : lib/World/src/dio.i

# target to preprocess a source file
lib/World/src/dio.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/dio.cpp.i
.PHONY : lib/World/src/dio.cpp.i

lib/World/src/dio.s: lib/World/src/dio.cpp.s

.PHONY : lib/World/src/dio.s

# target to generate assembly for a file
lib/World/src/dio.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/dio.cpp.s
.PHONY : lib/World/src/dio.cpp.s

lib/World/src/fft.o: lib/World/src/fft.cpp.o

.PHONY : lib/World/src/fft.o

# target to build an object file
lib/World/src/fft.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/fft.cpp.o
.PHONY : lib/World/src/fft.cpp.o

lib/World/src/fft.i: lib/World/src/fft.cpp.i

.PHONY : lib/World/src/fft.i

# target to preprocess a source file
lib/World/src/fft.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/fft.cpp.i
.PHONY : lib/World/src/fft.cpp.i

lib/World/src/fft.s: lib/World/src/fft.cpp.s

.PHONY : lib/World/src/fft.s

# target to generate assembly for a file
lib/World/src/fft.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/fft.cpp.s
.PHONY : lib/World/src/fft.cpp.s

lib/World/src/harvest.o: lib/World/src/harvest.cpp.o

.PHONY : lib/World/src/harvest.o

# target to build an object file
lib/World/src/harvest.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/harvest.cpp.o
.PHONY : lib/World/src/harvest.cpp.o

lib/World/src/harvest.i: lib/World/src/harvest.cpp.i

.PHONY : lib/World/src/harvest.i

# target to preprocess a source file
lib/World/src/harvest.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/harvest.cpp.i
.PHONY : lib/World/src/harvest.cpp.i

lib/World/src/harvest.s: lib/World/src/harvest.cpp.s

.PHONY : lib/World/src/harvest.s

# target to generate assembly for a file
lib/World/src/harvest.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/harvest.cpp.s
.PHONY : lib/World/src/harvest.cpp.s

lib/World/src/matlabfunctions.o: lib/World/src/matlabfunctions.cpp.o

.PHONY : lib/World/src/matlabfunctions.o

# target to build an object file
lib/World/src/matlabfunctions.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/matlabfunctions.cpp.o
.PHONY : lib/World/src/matlabfunctions.cpp.o

lib/World/src/matlabfunctions.i: lib/World/src/matlabfunctions.cpp.i

.PHONY : lib/World/src/matlabfunctions.i

# target to preprocess a source file
lib/World/src/matlabfunctions.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/matlabfunctions.cpp.i
.PHONY : lib/World/src/matlabfunctions.cpp.i

lib/World/src/matlabfunctions.s: lib/World/src/matlabfunctions.cpp.s

.PHONY : lib/World/src/matlabfunctions.s

# target to generate assembly for a file
lib/World/src/matlabfunctions.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/matlabfunctions.cpp.s
.PHONY : lib/World/src/matlabfunctions.cpp.s

lib/World/src/stonemask.o: lib/World/src/stonemask.cpp.o

.PHONY : lib/World/src/stonemask.o

# target to build an object file
lib/World/src/stonemask.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/stonemask.cpp.o
.PHONY : lib/World/src/stonemask.cpp.o

lib/World/src/stonemask.i: lib/World/src/stonemask.cpp.i

.PHONY : lib/World/src/stonemask.i

# target to preprocess a source file
lib/World/src/stonemask.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/stonemask.cpp.i
.PHONY : lib/World/src/stonemask.cpp.i

lib/World/src/stonemask.s: lib/World/src/stonemask.cpp.s

.PHONY : lib/World/src/stonemask.s

# target to generate assembly for a file
lib/World/src/stonemask.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/stonemask.cpp.s
.PHONY : lib/World/src/stonemask.cpp.s

lib/World/src/synthesis.o: lib/World/src/synthesis.cpp.o

.PHONY : lib/World/src/synthesis.o

# target to build an object file
lib/World/src/synthesis.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesis.cpp.o
.PHONY : lib/World/src/synthesis.cpp.o

lib/World/src/synthesis.i: lib/World/src/synthesis.cpp.i

.PHONY : lib/World/src/synthesis.i

# target to preprocess a source file
lib/World/src/synthesis.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesis.cpp.i
.PHONY : lib/World/src/synthesis.cpp.i

lib/World/src/synthesis.s: lib/World/src/synthesis.cpp.s

.PHONY : lib/World/src/synthesis.s

# target to generate assembly for a file
lib/World/src/synthesis.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesis.cpp.s
.PHONY : lib/World/src/synthesis.cpp.s

lib/World/src/synthesisrealtime.o: lib/World/src/synthesisrealtime.cpp.o

.PHONY : lib/World/src/synthesisrealtime.o

# target to build an object file
lib/World/src/synthesisrealtime.cpp.o:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesisrealtime.cpp.o
.PHONY : lib/World/src/synthesisrealtime.cpp.o

lib/World/src/synthesisrealtime.i: lib/World/src/synthesisrealtime.cpp.i

.PHONY : lib/World/src/synthesisrealtime.i

# target to preprocess a source file
lib/World/src/synthesisrealtime.cpp.i:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesisrealtime.cpp.i
.PHONY : lib/World/src/synthesisrealtime.cpp.i

lib/World/src/synthesisrealtime.s: lib/World/src/synthesisrealtime.cpp.s

.PHONY : lib/World/src/synthesisrealtime.s

# target to generate assembly for a file
lib/World/src/synthesisrealtime.cpp.s:
	$(MAKE) -f CMakeFiles/World.dir/build.make CMakeFiles/World.dir/lib/World/src/synthesisrealtime.cpp.s
.PHONY : lib/World/src/synthesisrealtime.cpp.s

src/WorldJS.o: src/WorldJS.cpp.o

.PHONY : src/WorldJS.o

# target to build an object file
src/WorldJS.cpp.o:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/WorldJS.cpp.o
.PHONY : src/WorldJS.cpp.o

src/WorldJS.i: src/WorldJS.cpp.i

.PHONY : src/WorldJS.i

# target to preprocess a source file
src/WorldJS.cpp.i:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/WorldJS.cpp.i
.PHONY : src/WorldJS.cpp.i

src/WorldJS.s: src/WorldJS.cpp.s

.PHONY : src/WorldJS.s

# target to generate assembly for a file
src/WorldJS.cpp.s:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/WorldJS.cpp.s
.PHONY : src/WorldJS.cpp.s

src/hello/hello.o: src/hello/hello.cpp.o

.PHONY : src/hello/hello.o

# target to build an object file
src/hello/hello.cpp.o:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/hello/hello.cpp.o
	$(MAKE) -f CMakeFiles/Hello.dir/build.make CMakeFiles/Hello.dir/src/hello/hello.cpp.o
.PHONY : src/hello/hello.cpp.o

src/hello/hello.i: src/hello/hello.cpp.i

.PHONY : src/hello/hello.i

# target to preprocess a source file
src/hello/hello.cpp.i:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/hello/hello.cpp.i
	$(MAKE) -f CMakeFiles/Hello.dir/build.make CMakeFiles/Hello.dir/src/hello/hello.cpp.i
.PHONY : src/hello/hello.cpp.i

src/hello/hello.s: src/hello/hello.cpp.s

.PHONY : src/hello/hello.s

# target to generate assembly for a file
src/hello/hello.cpp.s:
	$(MAKE) -f CMakeFiles/WorldJS.dir/build.make CMakeFiles/WorldJS.dir/src/hello/hello.cpp.s
	$(MAKE) -f CMakeFiles/Hello.dir/build.make CMakeFiles/Hello.dir/src/hello/hello.cpp.s
.PHONY : src/hello/hello.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... WorldJS"
	@echo "... World"
	@echo "... Hello"
	@echo "... lib/World/src/cheaptrick.o"
	@echo "... lib/World/src/cheaptrick.i"
	@echo "... lib/World/src/cheaptrick.s"
	@echo "... lib/World/src/codec.o"
	@echo "... lib/World/src/codec.i"
	@echo "... lib/World/src/codec.s"
	@echo "... lib/World/src/common.o"
	@echo "... lib/World/src/common.i"
	@echo "... lib/World/src/common.s"
	@echo "... lib/World/src/d4c.o"
	@echo "... lib/World/src/d4c.i"
	@echo "... lib/World/src/d4c.s"
	@echo "... lib/World/src/dio.o"
	@echo "... lib/World/src/dio.i"
	@echo "... lib/World/src/dio.s"
	@echo "... lib/World/src/fft.o"
	@echo "... lib/World/src/fft.i"
	@echo "... lib/World/src/fft.s"
	@echo "... lib/World/src/harvest.o"
	@echo "... lib/World/src/harvest.i"
	@echo "... lib/World/src/harvest.s"
	@echo "... lib/World/src/matlabfunctions.o"
	@echo "... lib/World/src/matlabfunctions.i"
	@echo "... lib/World/src/matlabfunctions.s"
	@echo "... lib/World/src/stonemask.o"
	@echo "... lib/World/src/stonemask.i"
	@echo "... lib/World/src/stonemask.s"
	@echo "... lib/World/src/synthesis.o"
	@echo "... lib/World/src/synthesis.i"
	@echo "... lib/World/src/synthesis.s"
	@echo "... lib/World/src/synthesisrealtime.o"
	@echo "... lib/World/src/synthesisrealtime.i"
	@echo "... lib/World/src/synthesisrealtime.s"
	@echo "... src/WorldJS.o"
	@echo "... src/WorldJS.i"
	@echo "... src/WorldJS.s"
	@echo "... src/hello/hello.o"
	@echo "... src/hello/hello.i"
	@echo "... src/hello/hello.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

